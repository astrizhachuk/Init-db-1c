#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Перем ПараметрыЗапуска;
	
	Если ( ПустаяСтрока(ПараметрЗапуска) ) Тогда
		
		ЗавершитьРаботуСистемы(Ложь);
		
	КонецЕсли;

	Если ( СоздатьПервогоАдминистратораПриНеобходимости("Администратор", ПараметрЗапуска) ) Тогда
		
		ЗавершитьРаботуСистемы(Ложь);
		
	КонецЕсли;
	
	ПараметрыЗапуска = ПараметрыЗапуска( ПараметрЗапуска );
	
	СоздатьПользователейИзФайлаJson( ПараметрыЗапуска );

	ЗавершитьРаботуСистемы(Ложь);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Если НЕ ВебКлиент Тогда
	
&НаКлиенте
Функция ПрочитатьДанныеИзФайлаJson( Знач Файл )
	
	Перем Результат;
	Перем ЧтениеJson;
	
	Попытка
	
		ЧтениеJson = Новый ЧтениеJSON();
		ЧтениеJson.ОткрытьФайл( Файл.ПолноеИмя );
		Результат = ПрочитатьJSON( ЧтениеJson, Ложь );
		ЧтениеJson.Закрыть();
		
	Исключение
		
		ЧтениеJson = Неопределено;
		
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

#КонецЕсли

&НаКлиенте
Функция ПараметрыЗапуска( Знач ПараметрЗапуска )

	Перем ПараметрыЗапуска;
	Перем ЭлементыПараметра;
	Перем Результат;
	
	СОДЕРЖИТ_ТОЛЬКО_КЛЮЧ = 1;
	СОДЕРЖИТ_КЛЮЧ_И_ЗНАЧЕНИЕ = 2;
	
	Результат = Новый Соответствие();
	
	ПараметрыЗапуска = _СтрРазделить( ПараметрЗапуска, ";", Ложь );
	
	Для Каждого Параметр Из ПараметрыЗапуска Цикл
		
		ЭлементыПараметра = _СтрРазделить( Параметр, "=", Ложь );
		
		Если ( ЗначениеЗаполнено(ЭлементыПараметра) ) Тогда
			
			Если ( ЭлементыПараметра.Количество() = СОДЕРЖИТ_ТОЛЬКО_КЛЮЧ ) Тогда
				
				Результат.Вставить(ВРег(ЭлементыПараметра[0]));
				Продолжить;
				
			КонецЕсли;
			
			Если ( ЭлементыПараметра.Количество() = СОДЕРЖИТ_КЛЮЧ_И_ЗНАЧЕНИЕ ) Тогда
				
				Результат.Вставить(ВРег(ЭлементыПараметра[0]), ЭлементыПараметра[1]);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьПервогоАдминистратораПриНеобходимости( Имя, ПараметрЗапуска )

	Перем Роли;	 
	Перем СоздаватьАдминистратора;
	Перем Успех;
	
	ПОЛНЫЕ_ПРАВА = "ПолныеПрава";
	
	Успех = Ложь;
	
	Если ( ПользователиИнформационнойБазы.ПолучитьПользователей().Количество() > 0 ) Тогда
		
		Возврат Успех;
		
	КонецЕсли;
	
	// Устарело. Для совместимости с версиями до 8.3.6.
	СоздаватьАдминистратора = ( Найти(ВРег(ПараметрЗапуска), "CREATEADMIN") > 0 
									ИЛИ Найти(ВРег(ПараметрЗапуска), "СОЗДАТЬАДМИНИСТРАТОРА") > 0
									И Метаданные.Роли.Найти(ПОЛНЫЕ_ПРАВА) <> Неопределено );
	
	Если ( НЕ СоздаватьАдминистратора ) Тогда
		
		Возврат Успех;
		
	КонецЕсли;
	
	Роли = Новый Массив();
	Роли.Добавить( ПОЛНЫЕ_ПРАВА );
	
	СоздатьПользователя( Имя, Роли, Успех );
	
	Возврат Успех;
	
КонецФункции

&НаКлиенте
Процедура СоздатьПользователейИзФайлаJson( Знач ПараметрыЗапуска )
	
	Перем ПутьКФайлу;
	Перем Файл;
	Перем ДанныеИзФайла;
	Перем Пользователи;
	
	ПутьКФайлу = ПараметрыЗапуска.Получить( "USERS-FROM-JSON" );
	
	Если ( ПутьКФайлу = Неопределено ) Тогда
		
		Возврат;
	
	КонецЕсли;
		
	Файл = Новый Файл( ПутьКФайлу );
	
	Если ( НЕ Файл.Существует() ) Тогда
		
		Возврат;
		
	КонецЕсли;
	
#Если НЕ ВебКлиент Тогда
	
	ДанныеИзФайла = ПрочитатьДанныеИзФайлаJson(Файл);
	
#Иначе
	
	ДанныеИзФайла = Неопределено;
	
#КонецЕсли

	ДанныеИзФайла.Свойство( "users", Пользователи );
	
	Если ( Пользователи <> Неопределено ) Тогда
		
		СоздатьПользователей( Пользователи );
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СоздатьПользователей( Знач Пользователи )
	
	Перем Успех;
	
	Успех = Ложь;

	Для Каждого Пользователь Из Пользователи Цикл
		
		СоздатьПользователя( Пользователь.name, Пользователь.roles, Успех );
		
	КонецЦикла;	

КонецПроцедуры

&НаСервереБезКонтекста
Процедура СоздатьПользователя( Знач Имя, Знач Роли, Отказ = Ложь )
	
	Перем Пользователь;
	Перем ТекстСообщения;
	
	ЯЗЫК_РУССКИЙ = Метаданные.Языки.Русский;
	
	Попытка
		
		Пользователь = ПользователиИнформационнойБазы.СоздатьПользователя();
		
		Пользователь.Имя = Имя;
		Пользователь.АутентификацияСтандартная = Истина;
		Пользователь.ПоказыватьВСпискеВыбора = Истина;
		Пользователь.ПолноеИмя = Имя;
		Пользователь.Язык = ЯЗЫК_РУССКИЙ;
		
		Для Каждого Роль Из Роли Цикл
			Пользователь.Роли.Добавить(Метаданные.Роли[Роль]);			
		КонецЦикла;

		Пользователь.Записать();	
		
	Исключение
		
		Отказ = Истина;
		
		ТекстСообщения =  НСтр("ru = 'Ошибка создания пользователя " + Имя + ": " + ОписаниеОшибки() + "'");
		ЗаписьЖурналаРегистрации( "Инициализация.Пользователи.Создание",
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ТекстСообщения);

	КонецПопытки;
	
КонецПроцедуры

// Устарело. Для совместимости с версиями до 8.3.6.
Функция _СтрРазделить(знач Строка, Разделитель, ВключатьПустые = Истина) Экспорт
	Результат = Новый Массив;
	
	Если Строка = "" Тогда 
		Если ВключатьПустые Тогда
			Результат.Добавить(Строка);
		КонецЕсли;
		Возврат Результат;
	КонецЕсли;
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если ВключатьПустые ИЛИ НЕ Подстрока = "" Тогда
			Результат.Добавить(Подстрока);
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если ВключатьПустые ИЛИ НЕ Строка = "" Тогда
		Результат.Добавить(Строка);
	КонецЕсли;
		
	Возврат Результат;
КонецФункции

#КонецОбласти